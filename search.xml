<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Git版本回退(已commit，但未push的情况下)</title>
      <link href="/2018/03/21/Git%E7%89%88%E6%9C%AC%E5%9B%9E%E9%80%80/"/>
      <content type="html"><![CDATA[<p>1、查看当前分支的版本历史</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log [--pretty=oneline]</span><br></pre></td></tr></table></figure><p>2、回退至上一版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD^</span><br></pre></td></tr></table></figure><p>3、回退至指定版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard 版本号</span><br></pre></td></tr></table></figure><p>4、吃后悔药，重返未来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reflog 查找出版本号再回退至指定版本</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">现在小结一下：</span><br><span class="line"></span><br><span class="line">HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。</span><br><span class="line"></span><br><span class="line">穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。</span><br><span class="line"></span><br><span class="line">要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。</span><br></pre></td></tr></table></figure><p>5、查看工作区和版本库里面最新版本的区别</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff HEAD -- _config.yml</span><br></pre></td></tr></table></figure><p>6、丢失工作区的修改(回到暂存区或本地版本库状态)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git checkout -- _config.yml</span><br><span class="line"></span><br><span class="line">一种是_config.yml自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；</span><br><span class="line"></span><br><span class="line">一种是_config.yml已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。</span><br><span class="line"></span><br><span class="line">总之，就是让这个文件回到最近一次git commit或git add时的状态。</span><br></pre></td></tr></table></figure><p>7、撤销暂存区的修改(不会覆盖工作区的文件)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD _config.yml</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">又到了小结时间。</span><br><span class="line"></span><br><span class="line">场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。</span><br><span class="line"></span><br><span class="line">场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。</span><br><span class="line"></span><br><span class="line">场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git版本回退 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git对远程仓库的管理（CRUD）</title>
      <link href="/2018/03/21/Git%E5%AF%B9%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E7%9A%84%E7%AE%A1%E7%90%86/"/>
      <content type="html"><![CDATA[<p>1、查看当前git仓库所连接的远程github仓库地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><p>2、关联github仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add [short-name] git@github.com:malaxg/malaxg.github.io.git</span><br></pre></td></tr></table></figure><p>3、重命名远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote rename &lt;old-remote-name&gt; &lt;new-remote-name&gt;</span><br></pre></td></tr></table></figure><p>4、修改远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote set-url --push [remote-name] [newUrl]</span><br></pre></td></tr></table></figure><p>5、删除远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote rm [remote-name]</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub仓库 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>学习思路</title>
      <link href="/2018/03/19/%E5%AD%A6%E4%B9%A0%E6%AD%A5%E9%AA%A4/"/>
      <content type="html"><![CDATA[<h3 id="学习新技术的四个要点"><a href="#学习新技术的四个要点" class="headerlink" title="学习新技术的四个要点"></a>学习新技术的四个要点</h3><ol><li>What?</li><li>Features?</li><li>How to use?</li><li>When?</li></ol>]]></content>
      
      
    </entry>
    
  
  
</search>
